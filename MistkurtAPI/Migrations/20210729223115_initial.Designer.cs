// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MistkurtAPI;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MistkurtAPI.Migrations
{
    [DbContext(typeof(MistKurtContext))]
    [Migration("20210729223115_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MistkurtAPI.Models.Expenses", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ExpensesID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Date")
                        .HasColumnType("integer")
                        .HasColumnName("Date");

                    b.Property<int>("Total")
                        .HasColumnType("integer")
                        .HasColumnName("Total");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid")
                        .HasColumnName("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MistkurtAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ProductID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ExpensesID")
                        .HasColumnType("integer")
                        .HasColumnName("ExpensesID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Tag")
                        .HasColumnType("text")
                        .HasColumnName("Tag");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("Type");

                    b.HasKey("ProductID");

                    b.HasIndex("ExpensesID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MistkurtAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("Role");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("Token");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MistkurtAPI.Models.Expenses", b =>
                {
                    b.HasOne("MistkurtAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MistkurtAPI.Models.Product", b =>
                {
                    b.HasOne("MistkurtAPI.Models.Expenses", "Expenses")
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
